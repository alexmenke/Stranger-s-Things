{"ast":null,"code":"var _jsxFileName = \"/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { updatePost } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    posts,\n    token,\n    fetchPosts\n  } = _ref;\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver\n  } = currentPost;\n  const [newTitle, setNewTitle] = useState(title);\n  const [newDescription, setNewDescription] = useState(description);\n  const [newPrice, setNewPrice] = useState(price);\n  const [newLocation, setNewLocation] = useState(location);\n  const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n  async function editPost() {\n    const updatedPost = {\n      token: token,\n      title: newTitle,\n      description: newDescription,\n      price: newPrice,\n      location: newLocation,\n      willDeliver: newWillDeliver,\n      _id: postID\n    };\n    await updatePost(updatedPost);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      editPost();\n      fetchPosts();\n      navigate('/posts');\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: title,\n      onChange: event => setNewTitle(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: description,\n      onChange: event => setNewDescription(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: price,\n      onChange: event => setNewPrice(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: location,\n      onChange: event => setNewLocation(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Will Deliver?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: newWillDeliver,\n      onChange: event => setNewWillDeliver(event.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPost, \"qV1HeMNBDs+3hUZM1oI65Up6NtQ=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","updatePost","EditPost","posts","token","fetchPosts","postID","currentPost","filter","post","_id","title","description","location","price","willDeliver","newTitle","setNewTitle","newDescription","setNewDescription","newPrice","setNewPrice","newLocation","setNewLocation","newWillDeliver","setNewWillDeliver","editPost","updatedPost","event","preventDefault","navigate","target","value","checked"],"sources":["/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/EditPost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { updatePost } from '../api'\n\n\nconst EditPost = ({ posts, token, fetchPosts }) => {\n    const { postID } = useParams();\n    const [currentPost] = posts.filter(post => post._id === postID);\n    const { title, description, location, price, willDeliver } = currentPost;\n\n    const [newTitle, setNewTitle] = useState(title);\n    const [newDescription, setNewDescription] = useState(description);\n    const [newPrice, setNewPrice] = useState(price);\n    const [newLocation, setNewLocation] = useState(location);\n    const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n    async function editPost() {\n        const updatedPost = {\n            token: token,\n            title: newTitle,\n            description: newDescription,\n            price: newPrice,\n            location: newLocation,\n            willDeliver: newWillDeliver,\n            _id: postID\n        }\n        await updatePost(updatedPost);\n    }\n\n    return (\n        <form onSubmit={(event) => {\n            event.preventDefault();\n            editPost();\n            fetchPosts();\n            navigate('/posts');\n        }}>\n            <input\n                type='text'\n                placeholder={title}\n                onChange={(event) => setNewTitle(event.target.value)}\n            />\n            <input\n                type='text'\n                placeholder={description}\n                onChange={(event) => setNewDescription(event.target.value)}\n            />\n            <input\n                type='text'\n                placeholder={price}\n                onChange={(event) => setNewPrice(event.target.value)}\n            />\n            <input\n                type='text'\n                placeholder={location}\n                onChange={(event) => setNewLocation(event.target.value)}\n            />\n            <label>Will Deliver?</label>\n            <input\n                type='checkbox'\n                checked={newWillDeliver}\n                onChange={(event) => setNewWillDeliver(event.target.checked)}\n            />\n            <button type='submit'>Update</button>\n        </form>\n    )\n}\n\nexport default EditPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}