{"ast":null,"code":"var _jsxFileName = \"/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { loginUser } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  //  const [errorMessages, setErrorMessages] = useState({});\n  //  const [isSubmitted, setIsSubmitted] = useState(false);\n  //  const database = [\n  //    {\n  //      username: \"user1\",\n  //      password: \"pass1\"\n  //    },\n  //    {\n  //      username: \"user2\",\n  //      password: \"pass2\"\n  //    }\n  //  ];\n  //  const errors = {\n  //    uname: \"invalid username\",\n  //    pass: \"invalid password\"\n  //  };\n  //  const handleSubmit = (event) => {\n  //    event.preventDefault();\n  //    var { uname, pass } = document.forms[0];\n  //    // Find user login info\n  //    const userData = database.find((user) => user.username === uname.value);\n  //    // Compare user info\n  //    if (userData) {\n  //      if (userData.password !== pass.value) {\n  //        // Invalid password\n  //        setErrorMessages({ name: \"pass\", message: errors.pass });\n  //      } else {\n  //        setIsSubmitted(true);\n  //      }\n  //    } else {\n  //      // Username not found\n  //      setErrorMessages({ name: \"uname\", message: errors.uname });\n  //    }\n  //  };\n  //  // Generate JSX code for error message\n  //  const renderErrorMessage = (name) =>\n  //    name === errorMessages.name && (\n  //      <div className=\"error\">{errorMessages.message}</div>\n  //    );\n  //  // JSX code for login form\n  //  const renderForm = (\n  //    <div className=\"form\">\n  //      <form onSubmit={handleSubmit}>\n  //        <div className=\"input-container\">\n  //          <label>Username </label>\n  //          <input type=\"text\" name=\"uname\" required />\n  //          {renderErrorMessage(\"uname\")}\n  //        </div>\n  //        <div className=\"input-container\">\n  //          <label>Password </label>\n  //          <input type=\"password\" name=\"pass\" required />\n  //          {renderErrorMessage(\"pass\")}\n  //        </div>\n  //        <div className=\"button-container\">\n  //          <input type=\"submit\" />\n  //        </div>\n  //      </form>\n  //    </div>\n  //  );\n  //  return (\n  //    <div className=\"app\">\n  //      <div className=\"login-form\">\n  //        <div className=\"title\">Sign In</div>\n  //        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n  //      </div>\n  //    </div>\n  //  );\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Username\" // onChange={(event) => setUsername(event.target.value)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Password\" // onChange={(event) => setPassword(event.target.value)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","loginUser","Login","event","preventDefault"],"sources":["/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { loginUser } from '../api';\n\nconst Login = () => {\n//  const [errorMessages, setErrorMessages] = useState({});\n//  const [isSubmitted, setIsSubmitted] = useState(false);\n\n//  const database = [\n//    {\n//      username: \"user1\",\n//      password: \"pass1\"\n//    },\n//    {\n//      username: \"user2\",\n//      password: \"pass2\"\n//    }\n//  ];\n\n//  const errors = {\n//    uname: \"invalid username\",\n//    pass: \"invalid password\"\n//  };\n\n//  const handleSubmit = (event) => {\n//    event.preventDefault();\n//    var { uname, pass } = document.forms[0];\n\n//    // Find user login info\n//    const userData = database.find((user) => user.username === uname.value);\n\n//    // Compare user info\n//    if (userData) {\n//      if (userData.password !== pass.value) {\n//        // Invalid password\n//        setErrorMessages({ name: \"pass\", message: errors.pass });\n//      } else {\n//        setIsSubmitted(true);\n//      }\n//    } else {\n//      // Username not found\n//      setErrorMessages({ name: \"uname\", message: errors.uname });\n//    }\n//  };\n\n//  // Generate JSX code for error message\n//  const renderErrorMessage = (name) =>\n//    name === errorMessages.name && (\n//      <div className=\"error\">{errorMessages.message}</div>\n//    );\n\n//  // JSX code for login form\n//  const renderForm = (\n//    <div className=\"form\">\n//      <form onSubmit={handleSubmit}>\n//        <div className=\"input-container\">\n//          <label>Username </label>\n//          <input type=\"text\" name=\"uname\" required />\n//          {renderErrorMessage(\"uname\")}\n//        </div>\n//        <div className=\"input-container\">\n//          <label>Password </label>\n//          <input type=\"password\" name=\"pass\" required />\n//          {renderErrorMessage(\"pass\")}\n//        </div>\n//        <div className=\"button-container\">\n//          <input type=\"submit\" />\n//        </div>\n//      </form>\n//    </div>\n//  );\n\n//  return (\n//    <div className=\"app\">\n//      <div className=\"login-form\">\n//        <div className=\"title\">Sign In</div>\n//        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n//      </div>\n//    </div>\n//  );\nreturn (\n    <form onSubmit={(event) => {\n      event.preventDefault();\n    }}>\n      <input \n        type='text'\n        placeholder='Enter Username'\n        // onChange={(event) => setUsername(event.target.value)}\n      />\n      <input \n        type='password'\n        placeholder='Enter Password'\n        // onChange={(event) => setPassword(event.target.value)}\n      />\n      <button type='submit'>Submit</button>\n    </form>\n  )\n}\n\nexport default Login;\n\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EACpB;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACI;IAAM,QAAQ,EAAGC,KAAD,IAAW;MACzBA,KAAK,CAACC,cAAN;IACD,CAFD;IAAA,wBAGE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,gBAFd,CAGE;;IAHF;MAAA;MAAA;MAAA;IAAA,QAHF,eAQE;MACE,IAAI,EAAC,UADP;MAEE,WAAW,EAAC,gBAFd,CAGE;;IAHF;MAAA;MAAA;MAAA;IAAA,QARF,eAaE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBC,CA7FD;;KAAMF,K;AA+FN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}