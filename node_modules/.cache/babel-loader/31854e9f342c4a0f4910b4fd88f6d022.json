{"ast":null,"code":"var _jsxFileName = \"/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\n/* we only need ReactDOM once. All new components will need to import React*/\n\nimport './style.css';\nimport { getPosts, getUserInfo } from './api/index.js';\nimport { Route, BrowserRouter, Routes, useNavigate } from 'react-router-dom';\nimport { Navbar, Posts, Profile, Home, Register, Login, NewPost, SinglePostView } from './components';\nimport { CssBaseline } from '@mui/material';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n\n  function logout() {\n    window.localStorage.removeItem('token');\n    setToken('');\n    setUser({});\n  }\n\n  async function fetchPosts() {\n    const results = await getPosts(token);\n    setPosts(results.data.posts);\n  }\n\n  async function getMe() {\n    const storedToken = window.localStorage.getItem('token');\n\n    if (!token) {\n      if (storedToken) {\n        setToken(storedToken);\n      }\n\n      return;\n    }\n\n    const results = await getUserInfo(token);\n\n    if (results.success) {\n      setUser(results.data);\n    } else {\n      console.log(results.error.message);\n    }\n  }\n\n  useEffect(() => {\n    fetchPosts();\n  }, [token]);\n  useEffect(() => {\n    getMe();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          style: {\n            marginRight: 20\n          },\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            flexGrow: 1\n          },\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n          logout: logout,\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/posts\",\n            element: /*#__PURE__*/_jsxDEV(Posts, {\n              posts: posts,\n              token: token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/posts/new-post\",\n            element: /*#__PURE__*/_jsxDEV(NewPost, {\n              token: token,\n              navigate: navigate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/posts/:postID\",\n            element: /*#__PURE__*/_jsxDEV(SinglePostView, {\n              posts: posts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(Profile, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              setToken: setToken,\n              token: token,\n              navigate: navigate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              setToken: setToken,\n              navigate: navigate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"sIUNO/qWpbpGCxunK6p6vh1x5eg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nconst container = document.querySelector('#container');\nconst root = ReactDOM.createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(CssBaseline, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 143,\n  columnNumber: 5\n}, this));\n/* Components we will need for this project:\nLog in\nRegistering new users\nPosts\nProfile\nNavigation bar\nAdding a post\nMay need more or less as we build\n*/\n\n/* Homework: Create the \"create post\" form/component (check the api - POST /posts). Will need an authorized token in order to create a post.\nCreate the profile page*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","getPosts","getUserInfo","Route","BrowserRouter","Routes","useNavigate","Navbar","Posts","Profile","Home","Register","Login","NewPost","SinglePostView","CssBaseline","Toolbar","AppBar","Typography","IconButton","Button","MenuIcon","App","posts","setPosts","token","setToken","user","setUser","navigate","logout","window","localStorage","removeItem","fetchPosts","results","data","getMe","storedToken","getItem","success","console","log","error","message","marginRight","flexGrow","container","document","querySelector","root","createRoot","render"],"sources":["/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\n/* we only need ReactDOM once. All new components will need to import React*/\nimport './style.css'\nimport {\n    getPosts,\n    getUserInfo\n} from './api/index.js'\nimport {\n    Route,\n    BrowserRouter,\n    Routes,\n    useNavigate\n} from 'react-router-dom';\nimport {\n    Navbar,\n    Posts,\n    Profile,\n    Home,\n    Register,\n    Login,\n    NewPost,\n    SinglePostView,\n} from './components';\n\nimport { CssBaseline } from '@mui/material';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [token, setToken] = useState('');\n    const [user, setUser] = useState({});\n\n    const navigate = useNavigate();\n\n    function logout() {\n        window.localStorage.removeItem('token');\n        setToken('');\n        setUser({});\n    }\n\n    async function fetchPosts() {\n        const results = await getPosts(token)\n        setPosts(results.data.posts);\n    }\n\n    async function getMe() {\n        const storedToken = window.localStorage.getItem('token');\n\n        if (!token) {\n            if (storedToken) {\n                setToken(storedToken);\n            }\n            return;\n        }\n\n        const results = await getUserInfo(token)\n        if (results.success) {\n            setUser(results.data);\n        } else {\n            console.log(results.error.message);\n        }\n    }\n\n    useEffect(() => {\n        fetchPosts();\n    }, [token])\n\n    useEffect(() => {\n        getMe();\n    }, [token])\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        style={{\n                            marginRight: 20,\n                        }}\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        style={{\n                            flexGrow: 1,\n                        }}\n                    >\n                        Dashboard\n                    </Typography>\n                    <Navbar logout={logout} token={token} />\n                    <Routes>\n                        <Route\n                            path='/'\n                            element={<Home />} />\n                        <Route\n                            path='/posts'\n                            element={<Posts posts={posts} token={token} />} />\n                        <Route\n                            exact path='/posts/new-post'\n                            element={<NewPost token={token} navigate={navigate} />} />\n                        <Route\n                            path='/posts/:postID'\n                            element={<SinglePostView posts={posts} />} />\n                        <Route\n                            path='/profile'\n                            element={<Profile user={user} />} />\n                        <Route\n                            path='/register'\n                            element={<Register\n                                setToken={setToken}\n                                token={token}\n                                navigate={navigate}\n                            />}\n                        />\n                        <Route\n                            path='/login'\n                            element={<Login\n                                setToken={setToken}\n                                navigate={navigate}\n                            />}\n                        />\n                    </Routes>\n                </Toolbar>\n            </AppBar>\n\n        </div>\n    )\n}\n\nconst container = document.querySelector('#container');\nconst root = ReactDOM.createRoot(container);\nroot.render(\n    <BrowserRouter>\n        <CssBaseline>\n            <App />\n        </CssBaseline>\n    </BrowserRouter>\n)\n\n/* Components we will need for this project:\nLog in\nRegistering new users\nPosts\nProfile\nNavigation bar\nAdding a post\nMay need more or less as we build\n*/\n\n/* Homework: Create the \"create post\" form/component (check the api - POST /posts). Will need an authorized token in order to create a post.\nCreate the profile page*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}