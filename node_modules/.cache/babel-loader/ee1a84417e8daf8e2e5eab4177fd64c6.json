{"ast":null,"code":"var _jsxFileName = \"/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    posts\n  } = _ref;\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver\n  } = currentPost;\n  const [newTitle, setNewTitle] = useState(title);\n  const [newDescription, setNewDescription] = useState(description);\n  const [newPrice, setNewPrice] = useState(price);\n  const [newLocation, setNewLocation] = useState(location);\n  const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n  async function editPost() {\n    const updatedPost = {\n      newTitle,\n      newDescription,\n      newPrice,\n      newLocation,\n      newWillDeliver\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: title,\n      onChange: event => setNewTitle(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: description,\n      onChange: event => setNewDescription(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: price,\n      onChange: event => setNewPrice(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: location,\n      onChange: event => setNewLocation(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Will Deliver?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: willDeliver,\n      onChange: event => setNewWillDeliver(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPost, \"qV1HeMNBDs+3hUZM1oI65Up6NtQ=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useParams","EditPost","posts","postID","currentPost","filter","post","_id","title","description","location","price","willDeliver","newTitle","setNewTitle","newDescription","setNewDescription","newPrice","setNewPrice","newLocation","setNewLocation","newWillDeliver","setNewWillDeliver","editPost","updatedPost","event","preventDefault","target","value"],"sources":["/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/EditPost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nconst EditPost = ({ posts }) => {\n    const { postID } = useParams();\n    const [currentPost] = posts.filter(post => post._id === postID);\n    const { title, description, location, price, willDeliver } = currentPost;\n\n    const [newTitle, setNewTitle] = useState(title);\n    const [newDescription, setNewDescription] = useState(description);\n    const [newPrice, setNewPrice] = useState(price);\n    const [newLocation, setNewLocation] = useState(location);\n    const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n    async function editPost() {\n        const updatedPost = {\n            newTitle, \n            newDescription,\n            newPrice,\n            newLocation,\n            newWillDeliver\n        }\n    }\n\n  return (\n    <form onSubmit={(event) => {\n        event.preventDefault();\n      }}>\n        <input \n          type='text'\n          placeholder={title}\n          onChange={(event) => setNewTitle(event.target.value)}\n        />\n        <input \n          type='text'\n          placeholder={description}\n          onChange={(event) => setNewDescription(event.target.value)}\n        />\n        <input \n          type='text'\n          placeholder={price}\n          onChange={(event) => setNewPrice(event.target.value)}\n        />\n        <input \n          type='text'\n          placeholder={location}\n          onChange={(event) => setNewLocation(event.target.value)}\n        />\n        <label>Will Deliver?</label>\n        <input \n          type='checkbox'\n          checked={willDeliver}\n          onChange={(event) => setNewWillDeliver(event.target.value)}\n        />\n        <button type='submit'>Update</button>\n      </form>\n  )\n}\n\nexport default EditPost;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAGA,MAAMC,QAAQ,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC5B,MAAM;IAAEC;EAAF,IAAaH,SAAS,EAA5B;EACA,MAAM,CAACI,WAAD,IAAgBF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,MAAlC,CAAtB;EACA,MAAM;IAAEK,KAAF;IAASC,WAAT;IAAsBC,QAAtB;IAAgCC,KAAhC;IAAuCC;EAAvC,IAAuDR,WAA7D;EAEA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACS,KAAD,CAAxC;EACA,MAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAACU,WAAD,CAApD;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAACY,KAAD,CAAxC;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAACW,QAAD,CAA9C;EACA,MAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAACa,WAAD,CAApD;;EAEA,eAAeW,QAAf,GAA0B;IACtB,MAAMC,WAAW,GAAG;MAChBX,QADgB;MAEhBE,cAFgB;MAGhBE,QAHgB;MAIhBE,WAJgB;MAKhBE;IALgB,CAApB;EAOH;;EAEH,oBACE;IAAM,QAAQ,EAAGI,KAAD,IAAW;MACvBA,KAAK,CAACC,cAAN;IACD,CAFH;IAAA,wBAGI;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAElB,KAFf;MAGE,QAAQ,EAAGiB,KAAD,IAAWX,WAAW,CAACW,KAAK,CAACE,MAAN,CAAaC,KAAd;IAHlC;MAAA;MAAA;MAAA;IAAA,QAHJ,eAQI;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAEnB,WAFf;MAGE,QAAQ,EAAGgB,KAAD,IAAWT,iBAAiB,CAACS,KAAK,CAACE,MAAN,CAAaC,KAAd;IAHxC;MAAA;MAAA;MAAA;IAAA,QARJ,eAaI;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAEjB,KAFf;MAGE,QAAQ,EAAGc,KAAD,IAAWP,WAAW,CAACO,KAAK,CAACE,MAAN,CAAaC,KAAd;IAHlC;MAAA;MAAA;MAAA;IAAA,QAbJ,eAkBI;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAElB,QAFf;MAGE,QAAQ,EAAGe,KAAD,IAAWL,cAAc,CAACK,KAAK,CAACE,MAAN,CAAaC,KAAd;IAHrC;MAAA;MAAA;MAAA;IAAA,QAlBJ,eAuBI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAvBJ,eAwBI;MACE,IAAI,EAAC,UADP;MAEE,OAAO,EAAEhB,WAFX;MAGE,QAAQ,EAAGa,KAAD,IAAWH,iBAAiB,CAACG,KAAK,CAACE,MAAN,CAAaC,KAAd;IAHxC;MAAA;MAAA;MAAA;IAAA,QAxBJ,eA6BI;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA7BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CAtDD;;GAAM3B,Q;UACiBD,S;;;KADjBC,Q;AAwDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}