{"ast":null,"code":"var _jsxFileName = \"/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/SinglePostView.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Card, CardContent, CardActions } from '@mui/material';\nimport { deletePost, createMessage } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SendMessage = _ref => {\n  _s();\n\n  let {\n    postID,\n    token\n  } = _ref;\n  const [message, setMessage] = useState({\n    content: ''\n  });\n\n  async function addMessage() {\n    await createMessage({\n      postID,\n      message,\n      token\n    });\n  } // we need three things to make this request. postID, token, message object containing the content of the message.\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      addMessage(); //will need to call the getMe function to populate the profile page with the new messages.\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Write message here\",\n      onChange: event => setMessage({\n        content: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SendMessage, \"yQIX9rk7a6C0ipVttj9Exd7EeZ4=\");\n\n_c = SendMessage;\n\nconst SinglePostView = _ref2 => {\n  _s2();\n\n  let {\n    posts,\n    token\n  } = _ref2;\n  const [activateMessage, setActivateMessage] = useState(false);\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver,\n    _id,\n    isAuthor\n  } = currentPost;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Will Deliver: \", willDeliver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: {\n        token,\n        isAuthor\n      } ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"View All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActivateMessage(!activateMessage),\n          children: \"Write a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), activateMessage && /*#__PURE__*/_jsxDEV(SendMessage, {\n          postID: postID,\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"View All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deletePost(token, _id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(SinglePostView, \"SaCcpfA+IAwaFepjA28zt0MOekY=\", false, function () {\n  return [useParams];\n});\n\n_c2 = SinglePostView;\nexport default SinglePostView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SendMessage\");\n$RefreshReg$(_c2, \"SinglePostView\");","map":{"version":3,"names":["React","useState","Link","useParams","Card","CardContent","CardActions","deletePost","createMessage","SendMessage","postID","token","message","setMessage","content","addMessage","event","preventDefault","target","value","SinglePostView","posts","activateMessage","setActivateMessage","currentPost","filter","post","_id","title","description","location","price","willDeliver","isAuthor"],"sources":["/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/SinglePostView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Card, CardContent, CardActions } from '@mui/material';\nimport { deletePost, createMessage } from '../api';\n\nconst SendMessage = ({ postID, token }) => {\n    const [message, setMessage] = useState({ content: '' });\n\n    async function addMessage() {\n        await createMessage({ postID, message, token })\n    }\n\n    // we need three things to make this request. postID, token, message object containing the content of the message.\n\n    return (\n        <form onSubmit={(event) => {\n            event.preventDefault();\n            addMessage();\n            //will need to call the getMe function to populate the profile page with the new messages.\n        }}>\n            <input\n                type='text'\n                placeholder='Write message here'\n                onChange={(event) => setMessage({ content: event.target.value })}\n            />\n            <button type='submit'>Send</button>\n        </form>\n    )\n}\n\nconst SinglePostView = ({ posts, token }) => {\n    const [activateMessage, setActivateMessage] = useState(false)\n    const { postID } = useParams();\n\n    const [currentPost] = posts.filter(post => post._id === postID);\n\n    const { title, description, location, price, willDeliver, _id, isAuthor } = currentPost;\n\n    return (\n        <Card>\n            <CardContent>\n                <h3>{title}</h3>\n                <p>Description: {description}</p>\n                <p>Price: {price}</p>\n                <p>Location: {location}</p>\n                <p>Will Deliver: {willDeliver}</p>\n            </CardContent>\n            <CardActions>\n                {/* <button onClick={() => setActivateMessage(!activateMessage)}>Write a message</button>\n                {\n                    activateMessage && <SendMessage postID={postID} token={token} />\n                } */}\n                {\n                    { token, isAuthor } ? (\n                        <>\n                            <Link to={`/posts`}><button>View All</button></Link>\n                            <button onClick={() => setActivateMessage(!activateMessage)}>Write a message</button>\n                            {\n                                activateMessage && <SendMessage postID={postID} token={token} />\n                            }\n                        </>\n\n                    ) : (\n                        <>\n                            <Link to={`/posts`}><button>View All</button></Link>\n                            <Link to={`/posts`}><button onClick={() => deletePost(token, _id)}>Delete</button></Link>\n                        </>\n                    )\n                }\n                {/* {\n                    { token } ? (\n\n                    )\n                } */}\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default SinglePostView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}