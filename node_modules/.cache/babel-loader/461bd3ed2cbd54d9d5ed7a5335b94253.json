{"ast":null,"code":"var _jsxFileName = \"/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { loginUser } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    token,\n    navigate\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async () => {\n    const results = await loginUser(username, password);\n\n    if (results.success) {\n      token(results.data.token);\n      window.localStorage.getItem('token', results.data.token);\n      navigate('/profile');\n    } else {\n      console.log(results.error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      handleSubmit();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Username\",\n      onChange: event => username(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      onChange: event => password(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n\n_c = Login;\nexport default Login; //  const [errorMessages, setErrorMessages] = useState({});\n//  const [isSubmitted, setIsSubmitted] = useState(false);\n//  const database = [\n//    {\n//      username: \"user1\",\n//      password: \"pass1\"\n//    },\n//    {\n//      username: \"user2\",\n//      password: \"pass2\"\n//    }\n//  ];\n//  const errors = {\n//    uname: \"invalid username\",\n//    pass: \"invalid password\"\n//  };\n//  const handleSubmit = (event) => {\n//    event.preventDefault();\n//    var { uname, pass } = document.forms[0];\n//    // Find user login info\n//    const userData = database.find((user) => user.username === uname.value);\n//    // Compare user info\n//    if (userData) {\n//      if (userData.password !== pass.value) {\n//        // Invalid password\n//        setErrorMessages({ name: \"pass\", message: errors.pass });\n//      } else {\n//        setIsSubmitted(true);\n//      }\n//    } else {\n//      // Username not found\n//      setErrorMessages({ name: \"uname\", message: errors.uname });\n//    }\n//  };\n//  // Generate JSX code for error message\n//  const renderErrorMessage = (name) =>\n//    name === errorMessages.name && (\n//      <div className=\"error\">{errorMessages.message}</div>\n//    );\n//  // JSX code for login form\n//  const renderForm = (\n//    <div className=\"form\">\n//      <form onSubmit={handleSubmit}>\n//        <div className=\"input-container\">\n//          <label>Username </label>\n//          <input type=\"text\" name=\"uname\" required />\n//          {renderErrorMessage(\"uname\")}\n//        </div>\n//        <div className=\"input-container\">\n//          <label>Password </label>\n//          <input type=\"password\" name=\"pass\" required />\n//          {renderErrorMessage(\"pass\")}\n//        </div>\n//        <div className=\"button-container\">\n//          <input type=\"submit\" />\n//        </div>\n//      </form>\n//    </div>\n//  );\n//  return (\n//    <div className=\"app\">\n//      <div className=\"login-form\">\n//        <div className=\"title\">Sign In</div>\n//        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n//      </div>\n//    </div>\n//  );\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","loginUser","Login","token","navigate","username","setUsername","password","setPassword","handleSubmit","results","success","data","window","localStorage","getItem","console","log","error","message","event","preventDefault","target","value"],"sources":["/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { loginUser } from '../api';\n\nconst Login = ({ token, navigate }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    \n    const handleSubmit = async () => {\n      const results = await loginUser(username, password);\n      if (results.success) {\n        token(results.data.token);\n        window.localStorage.getItem('token', results.data.token);\n        navigate('/profile');\n      } else {\n        console.log(results.error.message)\n      }\n    }\n\n    return (\n    <form onSubmit={(event) => {\n      event.preventDefault();\n      handleSubmit();\n    }}>\n      <input \n        type='text'\n        placeholder='Enter Username'\n        onChange={(event) => username(event.target.value)}\n      />\n      <input \n        type='password'\n        placeholder='Enter Password'\n        onChange={(event) => password(event.target.value)}\n      />\n      <button type='submit'>Submit</button>\n    </form>\n  )\n}\n\nexport default Login;\n\n//  const [errorMessages, setErrorMessages] = useState({});\n//  const [isSubmitted, setIsSubmitted] = useState(false);\n\n//  const database = [\n//    {\n//      username: \"user1\",\n//      password: \"pass1\"\n//    },\n//    {\n//      username: \"user2\",\n//      password: \"pass2\"\n//    }\n//  ];\n\n//  const errors = {\n//    uname: \"invalid username\",\n//    pass: \"invalid password\"\n//  };\n\n//  const handleSubmit = (event) => {\n//    event.preventDefault();\n//    var { uname, pass } = document.forms[0];\n\n//    // Find user login info\n//    const userData = database.find((user) => user.username === uname.value);\n\n//    // Compare user info\n//    if (userData) {\n//      if (userData.password !== pass.value) {\n//        // Invalid password\n//        setErrorMessages({ name: \"pass\", message: errors.pass });\n//      } else {\n//        setIsSubmitted(true);\n//      }\n//    } else {\n//      // Username not found\n//      setErrorMessages({ name: \"uname\", message: errors.uname });\n//    }\n//  };\n\n//  // Generate JSX code for error message\n//  const renderErrorMessage = (name) =>\n//    name === errorMessages.name && (\n//      <div className=\"error\">{errorMessages.message}</div>\n//    );\n\n//  // JSX code for login form\n//  const renderForm = (\n//    <div className=\"form\">\n//      <form onSubmit={handleSubmit}>\n//        <div className=\"input-container\">\n//          <label>Username </label>\n//          <input type=\"text\" name=\"uname\" required />\n//          {renderErrorMessage(\"uname\")}\n//        </div>\n//        <div className=\"input-container\">\n//          <label>Password </label>\n//          <input type=\"password\" name=\"pass\" required />\n//          {renderErrorMessage(\"pass\")}\n//        </div>\n//        <div className=\"button-container\">\n//          <input type=\"submit\" />\n//        </div>\n//      </form>\n//    </div>\n//  );\n\n//  return (\n//    <div className=\"app\">\n//      <div className=\"login-form\">\n//        <div className=\"title\">Sign In</div>\n//        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n//      </div>\n//    </div>\n//  );\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,MAAMC,KAAK,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAAEC,KAAF;IAASC;EAAT,CAAwB;EACnC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMS,YAAY,GAAG,YAAY;IAC/B,MAAMC,OAAO,GAAG,MAAMT,SAAS,CAACI,QAAD,EAAWE,QAAX,CAA/B;;IACA,IAAIG,OAAO,CAACC,OAAZ,EAAqB;MACnBR,KAAK,CAACO,OAAO,CAACE,IAAR,CAAaT,KAAd,CAAL;MACAU,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCL,OAAO,CAACE,IAAR,CAAaT,KAAlD;MACAC,QAAQ,CAAC,UAAD,CAAR;IACD,CAJD,MAIO;MACLY,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACQ,KAAR,CAAcC,OAA1B;IACD;EACF,CATD;;EAWA,oBACA;IAAM,QAAQ,EAAGC,KAAD,IAAW;MACzBA,KAAK,CAACC,cAAN;MACAZ,YAAY;IACb,CAHD;IAAA,wBAIE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,gBAFd;MAGE,QAAQ,EAAGW,KAAD,IAAWf,QAAQ,CAACe,KAAK,CAACE,MAAN,CAAaC,KAAd;IAH/B;MAAA;MAAA;MAAA;IAAA,QAJF,eASE;MACE,IAAI,EAAC,UADP;MAEE,WAAW,EAAC,gBAFd;MAGE,QAAQ,EAAGH,KAAD,IAAWb,QAAQ,CAACa,KAAK,CAACE,MAAN,CAAaC,KAAd;IAH/B;MAAA;MAAA;MAAA;IAAA,QATF,eAcE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAkBH,CAjCD;;GAAMrB,K;;KAAAA,K;AAmCN,eAAeA,KAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}