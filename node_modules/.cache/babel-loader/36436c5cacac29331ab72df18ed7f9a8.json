{"ast":null,"code":"var _jsxFileName = \"/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\n/* we only need ReactDOM once. All new components will need to import React*/\n\nimport './style.css';\nimport { getPosts, getUserInfo } from './api/index.js';\nimport { Route, BrowserRouter, Routes, useNavigate } from 'react-router-dom';\nimport { Navbar, Posts, Profile, Home, Register, Login, NewPost, SinglePostView } from './components';\nimport { AppBar, CssBaseline } from '@mui/material'; // import Toolbar from \"@material-ui/core/Toolbar\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Typography from \"@material-ui/core/Typography\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import Button from \"@material-ui/core/Button\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n\n  function logout() {\n    window.localStorage.removeItem('token');\n    setToken('');\n    setUser({});\n  }\n\n  async function fetchPosts() {\n    const results = await getPosts(token);\n    setPosts(results.data.posts);\n  }\n\n  async function getMe() {\n    const storedToken = window.localStorage.getItem('token');\n\n    if (!token) {\n      if (storedToken) {\n        setToken(storedToken);\n      }\n\n      return;\n    }\n\n    const results = await getUserInfo(token);\n\n    if (results.success) {\n      setUser(results.data);\n    } else {\n      console.log(results.error.message);\n    }\n  }\n\n  useEffect(() => {\n    fetchPosts();\n  }, [token]);\n  useEffect(() => {\n    getMe();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {\n            logout: logout,\n            token: token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/posts\",\n              element: /*#__PURE__*/_jsxDEV(Posts, {\n                posts: posts,\n                token: token\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/posts/new-post\",\n              element: /*#__PURE__*/_jsxDEV(NewPost, {\n                token: token,\n                navigate: navigate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/posts/:postID\",\n              element: /*#__PURE__*/_jsxDEV(SinglePostView, {\n                posts: posts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(Profile, {\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/register\",\n              element: /*#__PURE__*/_jsxDEV(Register, {\n                setToken: setToken,\n                token: token,\n                navigate: navigate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              element: /*#__PURE__*/_jsxDEV(Login, {\n                setToken: setToken,\n                navigate: navigate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"sIUNO/qWpbpGCxunK6p6vh1x5eg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nconst container = document.querySelector('#container');\nconst root = ReactDOM.createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(CssBaseline, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 149,\n  columnNumber: 5\n}, this));\n/* Components we will need for this project:\nLog in\nRegistering new users\nPosts\nProfile\nNavigation bar\nAdding a post\nMay need more or less as we build\n*/\n\n/* Homework: Create the \"create post\" form/component (check the api - POST /posts). Will need an authorized token in order to create a post.\nCreate the profile page*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","getPosts","getUserInfo","Route","BrowserRouter","Routes","useNavigate","Navbar","Posts","Profile","Home","Register","Login","NewPost","SinglePostView","AppBar","CssBaseline","App","posts","setPosts","token","setToken","user","setUser","navigate","logout","window","localStorage","removeItem","fetchPosts","results","data","getMe","storedToken","getItem","success","console","log","error","message","container","document","querySelector","root","createRoot","render"],"sources":["/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\n/* we only need ReactDOM once. All new components will need to import React*/\nimport './style.css'\nimport {\n    getPosts,\n    getUserInfo\n} from './api/index.js'\nimport {\n    Route,\n    BrowserRouter,\n    Routes,\n    useNavigate\n} from 'react-router-dom';\nimport {\n    Navbar,\n    Posts,\n    Profile,\n    Home,\n    Register,\n    Login,\n    NewPost,\n    SinglePostView,\n} from './components';\nimport { AppBar, CssBaseline } from '@mui/material';\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Typography from \"@material-ui/core/Typography\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import Button from \"@material-ui/core/Button\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [token, setToken] = useState('');\n    const [user, setUser] = useState({});\n\n    const navigate = useNavigate();\n\n    function logout() {\n        window.localStorage.removeItem('token');\n        setToken('');\n        setUser({});\n    }\n\n    async function fetchPosts() {\n        const results = await getPosts(token)\n        setPosts(results.data.posts);\n    }\n\n    async function getMe() {\n        const storedToken = window.localStorage.getItem('token');\n\n        if (!token) {\n            if (storedToken) {\n                setToken(storedToken);\n            }\n            return;\n        }\n\n        const results = await getUserInfo(token)\n        if (results.success) {\n            setUser(results.data);\n        } else {\n            console.log(results.error.message);\n        }\n    }\n\n    useEffect(() => {\n        fetchPosts();\n    }, [token])\n\n    useEffect(() => {\n        getMe();\n    }, [token])\n\n    return (\n        <div>\n            <AppBar>\n                <Toolbar>\n                    <Typography>\n                        <Navbar logout={logout} token={token} />\n                        <Routes>\n                            <Route\n                                path='/'\n                                element={<Home />} />\n                            <Route\n                                path='/posts'\n                                element={<Posts posts={posts} token={token} />} />\n                            <Route\n                                exact path='/posts/new-post'\n                                element={<NewPost token={token} navigate={navigate} />} />\n                            <Route\n                                path='/posts/:postID'\n                                element={<SinglePostView posts={posts} />} />\n                            <Route\n                                path='/profile'\n                                element={<Profile user={user} />} />\n                            <Route\n                                path='/register'\n                                element={<Register\n                                    setToken={setToken}\n                                    token={token}\n                                    navigate={navigate}\n                                />}\n                            />\n                            <Route\n                                path='/login'\n                                element={<Login\n                                    setToken={setToken}\n                                    navigate={navigate}\n                                />}\n                            />\n                        </Routes>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            {/* <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        style={{\n                            marginRight: 20,\n                        }}\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        style={{\n                            flexGrow: 1,\n                        }}\n                    >\n                        Dashboard\n                    </Typography>\n                    <Button color=\"inherit\">Logout</Button>\n                </Toolbar>\n            </AppBar> */}\n\n        </div>\n    )\n}\n\nconst container = document.querySelector('#container');\nconst root = ReactDOM.createRoot(container);\nroot.render(\n    <BrowserRouter>\n        <CssBaseline>\n            <App />\n        </CssBaseline>\n    </BrowserRouter>\n)\n\n/* Components we will need for this project:\nLog in\nRegistering new users\nPosts\nProfile\nNavigation bar\nAdding a post\nMay need more or less as we build\n*/\n\n/* Homework: Create the \"create post\" form/component (check the api - POST /posts). Will need an authorized token in order to create a post.\nCreate the profile page*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}