{"ast":null,"code":"var _jsxFileName = \"/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\n/* we only need ReactDOM once. All new components will need to import React*/\n\nimport './style.css';\nimport { getPosts, getUserInfo } from './api/index.js';\nimport { Route, BrowserRouter, Routes, useNavigate } from 'react-router-dom';\nimport { Navbar, Posts, Profile, Home, Register, Login, NewPost, SinglePostView, SendMessage, Search, EditPost } from './components';\nimport { CssBaseline } from '@mui/material'; // import Toolbar from \"@material-ui/core/Toolbar\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Typography from \"@material-ui/core/Typography\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import Button from \"@material-ui/core/Button\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n\n  function logout() {\n    window.localStorage.removeItem('token');\n    setToken('');\n    setUser({});\n  }\n\n  async function fetchPosts() {\n    const results = await getPosts(token);\n    setPosts(results.data.posts);\n  }\n\n  async function getMe() {\n    const storedToken = window.localStorage.getItem('token');\n\n    if (!token) {\n      if (storedToken) {\n        setToken(storedToken);\n      }\n\n      return;\n    }\n\n    const results = await getUserInfo(token);\n\n    if (results.success) {\n      setUser(results.data);\n    } else {\n      console.log(results.error.message);\n    }\n  }\n\n  useEffect(() => {\n    fetchPosts();\n  }, [token]);\n  useEffect(() => {\n    getMe();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      logout: logout,\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        element: /*#__PURE__*/_jsxDEV(Posts, {\n          posts: posts,\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/posts/new-post\",\n        element: /*#__PURE__*/_jsxDEV(NewPost, {\n          token: token,\n          navigate: navigate,\n          fetchPosts: fetchPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/posts/edit-post/:postID\",\n        element: /*#__PURE__*/_jsxDEV(EditPost, {\n          posts: posts,\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/posts/new-message\",\n        element: /*#__PURE__*/_jsxDEV(SendMessage, {\n          token: token,\n          navigate: navigate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:postID\",\n        element: /*#__PURE__*/_jsxDEV(SinglePostView, {\n          posts: posts,\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(Profile, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {\n          setToken: setToken,\n          token: token,\n          navigate: navigate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setToken: setToken,\n          navigate: navigate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"sIUNO/qWpbpGCxunK6p6vh1x5eg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nconst container = document.querySelector('#container');\nconst root = ReactDOM.createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(CssBaseline, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 139,\n  columnNumber: 5\n}, this));\n/* Components we will need for this project:\nLog in\nRegistering new users\nPosts\nProfile\nNavigation bar\nAdding a post\nMay need more or less as we build\n*/\n\n/* Homework: Create the \"create post\" form/component (check the api - POST /posts). Will need an authorized token in order to create a post.\nCreate the profile page*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","getPosts","getUserInfo","Route","BrowserRouter","Routes","useNavigate","Navbar","Posts","Profile","Home","Register","Login","NewPost","SinglePostView","SendMessage","Search","EditPost","CssBaseline","App","posts","setPosts","token","setToken","user","setUser","navigate","logout","window","localStorage","removeItem","fetchPosts","results","data","getMe","storedToken","getItem","success","console","log","error","message","container","document","querySelector","root","createRoot","render"],"sources":["/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\n/* we only need ReactDOM once. All new components will need to import React*/\nimport './style.css';\nimport {\n    getPosts,\n    getUserInfo\n} from './api/index.js';\nimport {\n    Route,\n    BrowserRouter,\n    Routes,\n    useNavigate\n} from 'react-router-dom';\nimport {\n    Navbar,\n    Posts,\n    Profile,\n    Home,\n    Register,\n    Login,\n    NewPost,\n    SinglePostView,\n    SendMessage,\n    Search,\n    EditPost\n} from './components';\nimport { CssBaseline } from '@mui/material';\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Typography from \"@material-ui/core/Typography\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import Button from \"@material-ui/core/Button\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [token, setToken] = useState('');\n    const [user, setUser] = useState({});\n\n    const navigate = useNavigate();\n\n    function logout() {\n        window.localStorage.removeItem('token');\n        setToken('');\n        setUser({});\n    }\n\n    async function fetchPosts() {\n        const results = await getPosts(token)\n        setPosts(results.data.posts);\n    }\n\n    async function getMe() {\n        const storedToken = window.localStorage.getItem('token');\n\n        if (!token) {\n            if (storedToken) {\n                setToken(storedToken);\n            }\n            return;\n        }\n\n        const results = await getUserInfo(token)\n        if (results.success) {\n            setUser(results.data);\n        } else {\n            console.log(results.error.message);\n        }\n    }\n\n    useEffect(() => {\n        fetchPosts();\n    }, [token])\n\n    useEffect(() => {\n        getMe();\n    }, [token])\n\n    return (\n        <div>\n            <Navbar\n                logout={logout}\n                token={token} />\n            <Routes>\n                <Route\n                    path='/'\n                    element={<Home />} />\n                <Route\n                    path='/posts'\n                    element={<Posts\n                        posts={posts}\n                        token={token} />} />\n                <Route\n                    exact path='/posts/new-post'\n                    element={<NewPost\n                        token={token}\n                        navigate={navigate}\n                        fetchPosts={fetchPosts} />} />\n                <Route\n                    exact path='/posts/edit-post/:postID'\n                    element={<EditPost\n                        posts={posts} \n                        token={token} />} />\n                    \n                <Route\n                    exact path='/posts/new-message'\n                    element={<SendMessage\n                        token={token}\n                        navigate={navigate} />} />\n                <Route\n                    path='/posts/:postID'\n                    element={<SinglePostView\n                        posts={posts}\n                        token={token} />} />\n                <Route\n                    path='/profile'\n                    element={<Profile\n                        user={user} />} />\n                <Route\n                    path='/register'\n                    element={<Register\n                        setToken={setToken}\n                        token={token}\n                        navigate={navigate} />} />\n                <Route\n                    path='/login'\n                    element={<Login\n                        setToken={setToken}\n                        navigate={navigate} />} />\n            </Routes>\n        </div>\n    )\n}\n\nconst container = document.querySelector('#container');\nconst root = ReactDOM.createRoot(container);\nroot.render(\n    <BrowserRouter>\n        <CssBaseline>\n            <App />\n        </CssBaseline>\n    </BrowserRouter>\n)\n\n/* Components we will need for this project:\nLog in\nRegistering new users\nPosts\nProfile\nNavigation bar\nAdding a post\nMay need more or less as we build\n*/\n\n/* Homework: Create the \"create post\" form/component (check the api - POST /posts). Will need an authorized token in order to create a post.\nCreate the profile page*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}