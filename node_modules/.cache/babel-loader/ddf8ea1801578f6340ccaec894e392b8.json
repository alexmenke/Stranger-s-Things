{"ast":null,"code":"var _jsxFileName = \"/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { deletePost, updatePost } from '../api';\nimport { Grid, Paper, TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    posts,\n    token,\n    fetchPosts\n  } = _ref;\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver\n  } = currentPost;\n  const [newTitle, setNewTitle] = useState(title);\n  const [newDescription, setNewDescription] = useState(description);\n  const [newPrice, setNewPrice] = useState(price);\n  const [newLocation, setNewLocation] = useState(location);\n  const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n  const navigate = useNavigate();\n\n  async function editPost() {\n    const updatedPost = {\n      token: token,\n      title: newTitle,\n      description: newDescription,\n      price: newPrice,\n      location: newLocation,\n      willDeliver: newWillDeliver,\n      _id: postID\n    };\n    await updatePost(updatedPost);\n  }\n\n  const paperStyle = {\n    padding: 20,\n    height: '70vh',\n    width: 300,\n    margin: '20px auto'\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      style: paperStyle,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          event.preventDefault();\n          editPost();\n          fetchPosts();\n          navigate('/posts');\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: title,\n          fullWidth: true,\n          required: true,\n          onChange: event => setNewTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: description,\n          fullWidth: true,\n          required: true,\n          onChange: event => setNewDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: price,\n          fullWidth: true,\n          required: true,\n          onChange: event => setNewPrice(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: location,\n          fullWidth: true,\n          required: true,\n          onChange: event => setNewLocation(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: () => deletePost(token, postID),\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this) // <form onSubmit={(event) => {\n  //     event.preventDefault();\n  //     editPost();\n  //     fetchPosts();\n  //     navigate('/posts');\n  // }}>\n  //     <input\n  //         type='text'\n  //         placeholder={title}\n  //         onChange={(event) => setNewTitle(event.target.value)}\n  //     />\n  //     <input\n  //         type='text'\n  //         placeholder={description}\n  //         onChange={(event) => setNewDescription(event.target.value)}\n  //     />\n  //     <input\n  //         type='text'\n  //         placeholder={price}\n  //         onChange={(event) => setNewPrice(event.target.value)}\n  //     />\n  //     <input\n  //         type='text'\n  //         placeholder={location}\n  //         onChange={(event) => setNewLocation(event.target.value)}\n  //     />\n  //     <label>Will Deliver?</label>\n  //     <input\n  //         type='checkbox'\n  //         checked={newWillDeliver}\n  //         onChange={(event) => setNewWillDeliver(event.target.checked)}\n  //     />\n  //     <button type='submit'>Update</button>\n  //     <button type='submit' onClick={() => deletePost(token, postID)}>Delete</button>\n  // </form>\n  ;\n};\n\n_s(EditPost, \"4MjJqOZvab/xxz22vIwPJXTVdOc=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","deletePost","updatePost","Grid","Paper","TextField","Button","EditPost","posts","token","fetchPosts","postID","currentPost","filter","post","_id","title","description","location","price","willDeliver","newTitle","setNewTitle","newDescription","setNewDescription","newPrice","setNewPrice","newLocation","setNewLocation","newWillDeliver","setNewWillDeliver","navigate","editPost","updatedPost","paperStyle","padding","height","width","margin","event","preventDefault","target","value"],"sources":["/Users/alexmenke/Fullstack/course_work/project_10/strangersThings/src/components/EditPost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { deletePost, updatePost } from '../api'\nimport {\n    Grid,\n    Paper,\n    TextField,\n    Button\n  } from '@mui/material'\n\n\nconst EditPost = ({ posts, token, fetchPosts }) => {\n    const { postID } = useParams();\n    const [currentPost] = posts.filter(post => post._id === postID);\n    const { title, description, location, price, willDeliver } = currentPost;\n\n    const [newTitle, setNewTitle] = useState(title);\n    const [newDescription, setNewDescription] = useState(description);\n    const [newPrice, setNewPrice] = useState(price);\n    const [newLocation, setNewLocation] = useState(location);\n    const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n    const navigate = useNavigate();\n\n    async function editPost() {\n        const updatedPost = {\n            token: token,\n            title: newTitle,\n            description: newDescription,\n            price: newPrice,\n            location: newLocation,\n            willDeliver: newWillDeliver,\n            _id: postID\n        }\n        await updatePost(updatedPost);\n    }\n\n    const paperStyle = {\n        padding: 20,\n        height: '70vh',\n        width: 300,\n        margin: '20px auto'\n      }\n\n    return (\n        <Grid>\n        <Paper elevation={10} style={paperStyle}>\n        <form onSubmit={(event) => {\n            event.preventDefault();\n            editPost();\n            fetchPosts();\n            navigate('/posts');\n        }}>\n            <Grid align='center'><h2>Edit post</h2></Grid>\n            <TextField placeholder={title} fullWidth required onChange={(event) => setNewTitle(event.target.value)} />\n            <TextField placeholder={description} fullWidth required onChange={(event) => setNewDescription(event.target.value)} />\n            <TextField placeholder={price} fullWidth required onChange={(event) => setNewPrice(event.target.value)}/>\n            <TextField placeholder={location} fullWidth required onChange={(event) => setNewLocation(event.target.value)}/>\n            <Button type='submit' color='primary' variant='contained' fullWidth>Update</Button>\n            <Button type='submit' onClick={() => deletePost(token, postID)} color='primary' variant='contained' fullWidth>Delete</Button>\n          </form>\n        </Paper>\n      </Grid>\n\n        // <form onSubmit={(event) => {\n        //     event.preventDefault();\n        //     editPost();\n        //     fetchPosts();\n        //     navigate('/posts');\n        // }}>\n        //     <input\n        //         type='text'\n        //         placeholder={title}\n        //         onChange={(event) => setNewTitle(event.target.value)}\n        //     />\n        //     <input\n        //         type='text'\n        //         placeholder={description}\n        //         onChange={(event) => setNewDescription(event.target.value)}\n        //     />\n        //     <input\n        //         type='text'\n        //         placeholder={price}\n        //         onChange={(event) => setNewPrice(event.target.value)}\n        //     />\n        //     <input\n        //         type='text'\n        //         placeholder={location}\n        //         onChange={(event) => setNewLocation(event.target.value)}\n        //     />\n        //     <label>Will Deliver?</label>\n        //     <input\n        //         type='checkbox'\n        //         checked={newWillDeliver}\n        //         onChange={(event) => setNewWillDeliver(event.target.checked)}\n        //     />\n        //     <button type='submit'>Update</button>\n        //     <button type='submit' onClick={() => deletePost(token, postID)}>Delete</button>\n        // </form>\n\n\n    )\n}\n\nexport default EditPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}